syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.aliyun.polardbx.rpc.cdc";
option optimize_for = SPEED;

package dumper;

service CdcService {
  // ShowBinaryLogs + ShowMasterLogs
  rpc ShowBinaryLogs (Request) returns (stream BinaryLog) {}

  rpc ShowMasterStatus (Request) returns (MasterStatus) {}

  rpc ShowBinlogEvents (ShowBinlogEventsRequest) returns (stream BinlogEvent) {}

  rpc Dump (DumpRequest) returns (stream DumpStream) {}

  rpc Sync (DumpRequest) returns (stream DumpStream) {}

  rpc ChangeMaster (ChangeMasterRequest) returns (RplCommandResponse) {}

  rpc ChangeReplicationFilter (ChangeReplicationFilterRequest) returns (RplCommandResponse) {}

  rpc StartSlave (StartSlaveRequest) returns (RplCommandResponse) {}

  rpc StopSlave (StopSlaveRequest) returns (RplCommandResponse) {}

  rpc ResetSlave (ResetSlaveRequest) returns (RplCommandResponse) {}

  rpc ShowSlaveStatus (ShowSlaveStatusRequest) returns (stream ShowSlaveStatusResponse) {}

}

message Request {
  string req = 1;
  string streamName = 2;
  bool excludeRemoteFiles = 3;
}

message ShowBinlogEventsRequest{
  string      logName = 1;
  int64       pos = 2;
  int64       offset = 3;
  int64       rowCount = 4;
  string      streamName = 5;
}

message DumpRequest{
  string           fileName = 1;
  int64            position = 2;
  EventSplitMode   splitMode = 3;
  bool             registered = 4;
  string           ext = 5;
  string           streamName = 6;
}

message BinaryLog {
  string logName = 1;
  int64  fileSize = 2;
}

message MasterStatus {
  string file = 1;
  int64  position = 2;
  string  binlogDoDB = 3;
  string  binlogIgnoreDB = 4;
  string  executedGtidSet = 5;
}

message BinlogEvent {
  string logName = 1;
  int64  pos = 2;
  string  eventType = 3;
  int64  serverId = 4;
  int64  endLogPos = 5;
  string  info = 6;
}

message DumpStream {
  bytes       payload = 1;
  bool        isHeartBeat = 2;
}

////////////////////////////// replicate ///////////////////////////
message RplCommandResponse{
  int32     resultCode = 1;
  string    error = 2;
}

message ChangeMasterRequest{
  string    request = 1;
}

message StartSlaveRequest{
  string    request = 1;
}

message StopSlaveRequest{
  string    request = 1;
}

message ResetSlaveRequest{
  string    request = 1;
}
message ChangeReplicationFilterRequest{
  string    request = 1;
}

message ShowSlaveStatusRequest{
  string    request = 1;
}

message ShowSlaveStatusResponse{
  string    response = 1;
}

enum EventSplitMode{
  /**
     * Server端对event进行拆包
     */
  SERVER = 0;
  /**
   * Client端对event进行拆包
   */
  CLIENT = 1;
  /**
   * 随机模式，测试用
   */
  RANDOM = 2;
}