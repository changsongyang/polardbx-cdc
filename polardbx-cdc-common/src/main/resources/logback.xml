<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="10 seconds">

    <appender name="fileAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/default.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/default.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) %X{C} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <appender name="commitAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/commit.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/commit.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="reformatAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/reformat.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/reformat.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>


    <appender name="transactionAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/transaction.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/transaction.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="duplicateTransactionAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/duplicate_transaction.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/duplicate_transaction.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="rdsDownloadAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/rds_download.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/rds_download.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>


    <appender name="traceIdDisorderAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/traceid_disorder.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/traceid_disorder.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="transmitWriteAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/transmit_write.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/transmit_write.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="transmitReadAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME}/logs/polardbx-binlog/${taskName}/transmit_read.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${HOME}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/transmit_read.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>5</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="file.async.commit" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="commitAppender"/>
    </appender>


    <appender name="skipTransAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/skip_trans.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/skip_trans.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="file.async.transaction" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="transactionAppender"/>
    </appender>


    <appender name="metricsAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/metrics.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/metrics.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="rocksDbAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/rocksdb.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/rocksdb.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="rebuildEventAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/rebuild_event.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/rebuild_event.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <appender name="ddlEventAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/ddl_event.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/ddl_event.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>


    <appender name="eventCommitAppender"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${user.home}/logs/polardbx-binlog/${taskName}/event_commit.log</file>
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${user.home}/logs/polardbx-binlog/${taskName}/%d{yyyy-MM-dd}/event_commit.%i.log.gz
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>200MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
                <![CDATA[
						    %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{36}) - %msg%n
						]]>
            </pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>

    <logger name="com.aliyun.polardbx.binlog.extractor.commit" level="INFO" additivity="false">
        <appender-ref ref="file.async.commit"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.extractor.transaction" level="INFO" additivity="false">
        <appender-ref ref="file.async.transaction"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="transmitWriteLogger" level="WARN" additivity="false">
        <appender-ref ref="transmitWriteAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="transmitReadLogger" level="WARN" additivity="false">
        <appender-ref ref="transmitReadAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.dumper.dump.logfile.LogFileGenerator" level="INFO" additivity="false">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.dumper.dump.server.SessionHandler" level="INFO" additivity="false">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="SKIP_TRANS_LOG" level="INFO" additivity="false">
        <appender-ref ref="skipTransAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.transmit.LogEventTransmitter" level="INFO" additivity="false">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.dumper.dump.util.EventGenerator" level="INFO" additivity="false">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.storage.LogEventStorage" level="INFO" additivity="false">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="rebuildEventLogger" level="INFO" additivity="false">
        <appender-ref ref="rebuildEventAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="ddlEventLogger" level="INFO" additivity="false">
        <appender-ref ref="ddlEventAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="com.aliyun.polardbx.binlog.extractor.filter.RtRecordFilter" level="INFO" additivity="false">
        <appender-ref ref="eventCommitAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="duplicateTransactionLogger" level="INFO" additivity="false">
        <appender-ref ref="duplicateTransactionAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="FileTest" level="INFO" additivity="false">
        <appender-ref ref="FILE_TEST"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="metaLogger" level="INFO">
        <appender-ref ref="metaAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="METRICS" level="WARN" additivity="false">
        <appender-ref ref="metricsAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="rocksDbLogger" level="WARN" additivity="false">
        <appender-ref ref="rocksDbAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="traceIdDisorderLogger" level="WARN" additivity="false">
        <appender-ref ref="traceIdDisorderAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="rdsDownloadLogger" level="INFO" additivity="false">
        <appender-ref ref="rdsDownloadAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <logger name="reformatLogger" level="INFO" additivity="false">
        <appender-ref ref="reformatAppender"/>
        <appender-ref ref="consoleAppender"/>
    </logger>

    <root level="INFO">
        <appender-ref ref="fileAppender"/>
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>
