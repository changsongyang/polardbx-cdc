#
# 基础配置
#
## second
scanPeriod=2
polardbx.instance.id=${maven.polardbx.instance.id}
cluster_id=${maven.cluster_id}
ins_id=${maven.ins_id}
ins_ip=${maven.ins_ip}
daemon_port=${maven.daemon_port}
ssh_port=${maven.ssh_port}
common_ports=${maven.common_ports}
cpu_cores=${maven.cpu_cores}
mem_size=${maven.mem_size}
disk_size=${maven.disk_size}
rdsUid=${maven.rdsUid}
rdsBid=${maven.rdsBid}
rds_api_url=${maven.rds_api_url}
rds_api_access_id=${maven.rds_api_access_id}
rds_api_access_key=${maven.rds_api_access_key}
runtime.mode=${maven.runtime.mode}
printMetrics=${maven.printMetrics}
enableInterfaceACL=false
# deamon rest api acl aksk
deamon_rest_api_acl_ak=
deamon_rest_api_acl_sk=
cluster_type=${maven.cluster_type}
dnPasswordKey=${maven.dnPasswordKey}
useEncryptedPassword=false
assignedDnIp=
ENABLE_CDC_META_BUILD_SNAPSHOT=
#
# Storage相关的参数配置
#
storage.isPersistOn=${maven.storage.isPersistOn}
storage.persist.mode=${maven.storage.persist.mode}
storage.persistAllThreshold=0.95
storage.persistNewThreshold=${maven.storage.persistNewThreshold}
storage.persistCheckInterval.mills=10
storage.txnPersistThreshold=${maven.storage.txnPersistThreshold}
storage.txnItemPersistThreshold=${maven.storage.txnItemPersistThreshold}
storage.persistBasePath=${maven.storage.persistBasePath}
storage.persistDeleteMode=${maven.storage.persistDeleteMode}
storage.persistRepoUnitCount=${maven.storage.persistRepoUnitCount}
storage.cleanWorker.count=${maven.storage.cleanWorker.count}
storage.clean.buffer.size=10000
storage.parallelRestore.enable=true
storage.parallelRestore.parallelism=4
storage.parallelRestore.batchSize=100
storage.parallelRestore.maxEventSize=5242880
#
# metadb的数据库配置
#
metaDb_url=${maven.metaDb_url}
metaDb_username=${maven.metaDb_username}
metaDb_password=${maven.metaDb_password}
#
# polarx server的数据库配置
#
polarx_url=${maven.polarx_url}
polarx_username=${maven.polarx_username}
polarx_password=${maven.polarx_password}
#
# datasource相关
#
datasource.maxActive=60
datasource.maxWait=600000
datasource.wrapper.checkValid.timeout.sec=1
#
# Task和Dumper之间，Txn Stream相关参数
#
binlog.txn.stream.dumpReply.packetMode=${maven.binlog.txn.stream.dumpReply.packetMode}
binlog.txn.stream.client.useAsyncMode=true
binlog.txn.stream.client.receive.queue.size=64
binlog.txn.stream.flowControl.window.size=800
#
# 逻辑Binlog目录&文件&上传下载等相关配置
#
binlog.dir.path=${maven.binlog.dir.path}
binlog.file.size=${maven.binlog.file.size}
binlog.file.seek.bufferSize=${maven.binlog.file.seek.bufferSize}
binlog.file.seek.lastTsoMode=0
binlog.write.dryRun=false
binlog.write.dryRun.mode=1
binlog.write.supportRowsQueryLog=${maven.binlog.write.supportRowsQueryLog}
binlog.write.checkRowsQuery=${maven.binlog.write.checkRowsQuery}
binlog.write.checkTso=true
binlog.write.buffer.size=1048576
binlog.write.useDirectByteBuffer=true
binlog.write.flush.policy=0
binlog.write.flush.interval=1000
binlog.write.heartbeatFlushInterval=30
binlog.write.tableId.baseValue=0
binlog.write.useParallel=${maven.binlog.write.useParallel}
binlog.write.parallelism=1
binlog.write.parallel.useBatch=true
binlog.write.parallel.buffer.size=65536
binlog.write.parallel.eventData.buffer.size=1024
binlog.write.parallel.eventData.maxSize=8192
binlog.sync.read.buffer.size=1048576
binlog.sync.packet.size=1048576
binlog.sync.client.useAsyncMode=true
binlog.sync.client.receive.queue.size=64
binlog.sync.flowControl.window.size=800
binlog.sync.event.split.mode=${maven.binlog.sync.event.split.mode}
binlog.sync.injectTrouble=${maven.binlog.sync.injectTrouble}
binlog.dumper.slave.start.mode=${maven.binlog.dumper.slave.start.mode}
binlog.dump.packet.size=2097152
binlog.dump.read.buffer.size=33554432
binlog.dump.heartbeat.interval.ms=1000
# dumper 启动后得替代 cursor ready重试次数配置
binlog.dump.wait.cursor.ready.times.limit=6
# dumper 启动后等待 cursor ready重试间隔
binlog.dump.wait.cursor.ready.retry.interval.second=5
binlog.dump.remote.channel.test.mode=${maven.binlog.dump.remote.channel.test.mode}
binlog.backup.type=${maven.binlog.backup.type}
binlog.backup.fileExpireTime.days=15
binlog.backup.recordExpireTime.days=7
binlog.backup.uploadMode=APPEND
binlog.backup.upload.bufferSize=1048576
binlog.backup.upload.maxThreadNum=32
binlog.backup.upload.maxAppendFileSize=4
binlog.backup.upload.partSize=10485760
binlog.backup.upload.waitData.timeout.ms=10000
binlog.backup.downloadMode=PARALLEL
binlog.backup.download.partSize=52428800
binlog.backup.download.maxThreadNum=10
binlog.backup.downloadLastNum=1
binlog.backup.download.testing.enable=${maven.binlog.backup.download.testing.enable}
binlog.downloadLink.available.interval=43200
binlog.cleaner.check.interval=1
binlog.cleaner.clean.threshold=0.9
binlog.cleaner.clean.enable=true
binlog.recovery.startTso.overwrite.config=[]
oss.endpoint=${maven.oss.endpoint}
oss.bucket.name=${maven.oss.bucket.name}
oss.accessKeyId=${maven.oss.accessKeyId}
oss.accessKeySecret=${maven.oss.accessKeySecret}
lindorm.endpoint=${maven.lindorm.endpoint}
lindorm.thriftPort=${maven.lindorm.thriftPort}
lindorm.s3Port=${maven.lindorm.s3Port}
lindorm.bucket.name=${maven.lindorm.bucket.name}
lindorm.accessKeyId=${maven.lindorm.accessKeyId}
lindorm.accessKeySecret=${maven.lindorm.accessKeySecret}
#
# Daemon和拓扑相关的配置
#
daemon.heartbeat.interval.ms=${maven.daemon.heartbeat.interval.ms}
daemon.topology.watch.interval.ms=${maven.daemon.topology.watch.interval.ms}
daemon.task.watch.interval.ms=${maven.daemon.task.watch.interval.ms}
daemon.task.watch.heartbeat.timeout.ms=${maven.daemon.task.watch.heartbeat.timeout.ms}
daemon.task.stop.nolocal.whitelist=MysqlDumpStressTest
daemon.tso.heartbeat.interval.ms=${maven.daemon.tso.heartbeat.interval.ms}
daemon.tso.heartbeat.selfAdaption.enable=false
daemon.tso.heartbeat.selfAdaption.targetInterval=10
daemon.tso.heartbeat.selfAdaption.threshold.eps=300000
daemon.history.check.interval.minute=${maven.daemon.history.check.interval.minute}
daemon.cluster.binlog.supportRunReplica=${maven.daemon.cluster.binlog.supportRunReplica}
topology.node.minsize=${maven.topology.node.minsize}
topology.heartbeat.timeout.ms=${maven.topology.heartbeat.timeout.ms}
topology.waitStart.timeout.ms=${maven.topology.waitStart.timeout.ms}
topology.task.heartbeat.interval.ms=${maven.topology.task.heartbeat.interval.ms}
topology.task.relay.datanode.threshold=1024
topology.resource.useRatio=${maven.topology.resource.useRatio}
topology.resource.dumper.weight=${maven.topology.resource.dumper.weight}
topology.resource.dumper.slave.maxMem=8192
topology.resource.task.weight=${maven.topology.resource.task.weight}
topology.scale.repairStorage.enable=${maven.topology.scale.repairStorage.enable}
topology.recoverTso.type=${maven.topology.recoverTso.type}
topology.recoverTso.timeLimit=${maven.topology.recoverTso.timeLimit}
topology.recoverTso.binlogNumLimit=${maven.topology.recoverTso.binlogNumLimit}
topology.recoverTso.testing.enable=${maven.topology.recoverTso.testing.enable}
topology.forceRefresh.interval.minute=${maven.topology.forceRefresh.interval.minute}
topology.support.rebuild.only.daemon.down=false
#
# Task相关的配置
#
task.engine.autoStart=false
task.merger.mergeNoTsoXa=false
task.merger.dryRun=false
task.merger.dryRun.mode=1
task.merger.group.unit.size=8
task.merger.group.queue.size=256
task.merger.group.maxLevel=2
task.hbwindow.forceComplete.threshold=10
task.transmitter.dryRun=false
task.transmitter.dryRun.mode=1
task.transmitter.chunkMode=MEMSIZE
task.transmitter.chunkItemSize=10240
task.transmitter.maxMessageSize=104857600
task.extractor.recordTransLog=${maven.task.extractor.recordTransLog}
task.extractor.recordTransLogDetail=${maven.task.extractor.recordTransLogDetail}
task.extractor.logicTable.blacklist=
task.extractor.logicDb.blacklist=
task.collector.mergeStage.parallelism=4
task.collector.buildPacket.threshold=65536
task.rdsbinlog.forceConsumeBackup=false
task.rdsbinlog.download.dir=${maven.task.rdsbinlog.download.dir}
task.rdsbinlog.download.num=3
task.rdsbinlog.thread.limit=10
task.rdsbinlog.storage.disk.limit=5120
task.rdsbinlog.download.recall.days=10
task.rdsbinlog.download.assigned.host=
task.rdsbinlog.disk.limit=204800
task.support.drdsHiddenPk=false
task.traceid.disorder.ignore=false
task.transaction.skip.whitelist=
task.transaction.skip.threshold=500
# 随机丢失commit信息开关
task.transaction.random.discard.commit=${maven.task.transaction.random.discard.commit}
task.skip.exception.bufferKey.duplicate=false
task.queue.mergeSource.size=512
task.queue.mergeSource.maxTotalSize=20480
task.queue.collector.size=8192
task.queue.transmitter.size=1024
task.queue.dumping.size=64
task.searchTso.isCheckPreStorageChange=false
task.ddl.removeHints=${maven.task.ddl.removehints}
task.ddl.strictTransTablesMode.blacklist.db=${maven.task.ddl.strictTransTablesMode.blacklist.db}
task.searchTso.quickMode=${maven.task.searchTso.quickMode}
task.event.commitLog=false
# 下载模式
task.searchTso.oldMode=false
# 使用v1版本搜索算法
task.searchTso.handle.v1=false
# oss cache size 30M，内存模式使用
task.oss.cache.size=31457280
# oss cache 最大使用量  30M * 3 * 6 = 540M，非磁盘模式使用
task.oss.cache.maxsize=566231040
# oss cache 模式，默认自动模式，根据dn数量判断 MEMORY/DISK/AUTO
task.oss.cache.mode=AUTO
# 支持整形类型开关
task.extractor.rowImage.type.rebuild.support=true
# 开启私有DDL开关，默认打开
task.ddl.privateDdl.support=true
# 强制开启整形，默认关闭
task.meta.rebuild.force.support=false
# 如果有物理与逻辑数据列数量不匹配，可以开启跳过异常
task.meta.ignore.column.compare.error=false
# 库表黑名单，可以过滤掉某些不需要的表,在加入到buffer（整形）之前, 示例: test_db_.my_table, 支持正则, 每次修改后重启生效
task.meta.rebuild.blacklist=${maven.task.meta.rebuild.blacklist}
#
# 报警相关的参数配置
#
alarm.nodata.threshold=60
alarm.delay.threshold=30
alarm.reportAlarmEvent=true
alarm.latestConsumeTime.ms=0
alarm.checkConsumer.interval.ms=60000
alarm.fatal.threshold.ms=7200000
#
# meta相关的控制参数
#
meta.openTopologyRepair=false
meta.useHistoryTableFirst=false
meta.rollback.mode=${maven.meta.rollback.mode}
meta.rollback.mode.supportInstantCreatTable=SNAPSHOT_SEMI,SNAPSHOT_UNSAFE
meta.rollback.mode.forceUseSnapshotExactly=false
meta.checkConsistencyAfterEachApply=${maven.meta.checkConsistencyAfterEachApply}
meta.checkFastsqlFormatResult=${maven.meta.checkFastsqlFormatResult}
meta.printSummaryAfterApply.switch=false
meta.printSummaryAfterApply.tables=
meta.printDetailAfterApply.switch=false
meta.printDetailAfterApply.tables=
meta.semiSnapshot.enable=true
meta.semiSnapshot.holdingTime=${maven.meta.semiSnapshot.holdingTime}
meta.semiSnapshot.deltaChange.checkInterval=60
meta.ddlrecord.persistSqlWithExist.switch=false
meta.ddlrecord.logic.count.alarm.threshold=100000
meta.ddlrecord.phy.count.alarm.threshold=500000
meta.ddlrecord.phy.count.clean.threshold=500000
meta.ddlrecord.mark.count.clean.threshold=${maven.meta.ddlrecord.mark.count.clean.threshold}
meta.ddlrecord.logic.softDelete.enable=${maven.meta.ddlrecord.logic.softDelete.enable}
meta.ddlrecord.tableMeta.count.limit=${maven.meta.ddlrecord.tableMeta.count.limit}
meta.ddlrecord.tableMeta.count.check.interval=${maven.meta.ddlrecord.tableMeta.count.check.interval}
meta.ddl.converter.algorithm.blacklist=OMC,OMC_INDEX
meta.queryEvent.blackList=${maven.meta.queryEvent.blackList}
meta.persist.basePath=${maven.meta.persist.basePath}
meta.persist.schemaObject.switch=${maven.meta.persist.schemaObject.switch}
meta.topology.share.switch=${maven.meta.topology.share.switch}
meta.topology.share.useIntern=false
meta.logicDdl.apply.database.blacklist=polardbx
meta.logicDdl.apply.table.blacklist=
meta.logicDdl.apply.tso.blacklist=
meta.compare.cache.enable=true
meta.ddl.ignoreApplyError=false
meta.table.maxCacheSize=8192
meta.table.cacheExpireTime.minutes=60
#
# FlashBack相关的参数
#
flashback.binlog.files.count.perTask=5
flashback.binlog.write.bufferSqlSize=163840
flashback.binlog.write.bufferByteSize=536870912
flashback.binlog.download.dir=${maven.flashback.binlog.download.dir}
flashback.binlog.maxDownloadFileCount=200
flashback.binlog.downloadThreadNum=10
flashback.downloadlink.available.interval=1296000
flashback.upload.multiMode.threshold=5368709120
#
# Binlog-X相关参数
#
binlogx.rocksdb.bashPath=${maven.binlogx.rocksdb.bashPath}
binlogx.autoInit=${maven.binlogx.autoInit}
binlogx_stream_group_name=${maven.binlogx.stream.group.name}
binlogx_stream_count=${maven.binlogx.stream.count}
binlogx.dir.path.prefix=${maven.binlogx.dir.path.prefix}
binlogx.waitLatestTso.timeout=30
binlogx.schedule.dispatcher.count.unit=1
binlogx.schedule.dispatcher.memory.unit=10240
binlogx.schedule.dispatcher.memory.min=1024
binlogx.schedule.dispatcher.rocksdb.ratio=0.1
binlogx.transmit.relay.engine.type=${maven.binlogx.transmit.relay.engine.type}
binlogx.transmit.relay.file.maxSize=104857600
binlogx.transmit.read.batch.item.size=200
binlogx.transmit.read.batch.byte.size=10485760
binlogx.transmit.read.file.buffer.size=1048576
binlogx.transmit.read.logDetail.enable=${maven.binlogx.transmit.read.logDetail.enable}
binlogx.transmit.write.batchSize=100
binlogx.transmit.write.parallelism=4
binlogx.transmit.write.queue.size=256
binlogx.transmit.write.file.buffer.size=1048576
binlogx.transmit.write.file.buffer.direct=true
binlogx.transmit.write.file.flush.interval=100
binlogx.transmit.write.slowdown.threshold=250
binlogx.transmit.write.slowdown.speed=1048576
binlogx.transmit.write.stop.threshold=500
binlogx.transmit.write.logDetail.enable=${maven.binlogx.transmit.write.logDetail.enable}
binlogx_transmit_hash_level=${maven.binlogx.transmit.hashLevel}
binlogx.useRecordLevelHash.dbList=${maven.binlogx.useRecordLevelHash.dbList}
binlogx.useRecordLevelHash.tableList=${maven.binlogx.useRecordLevelHash.tableList}
binlogx.useDbLevelHash.dbList=${maven.binlogx.useDbLevelHash.dbList}
binlogx.useDbLevelHash.tableList=${maven.binlogx.useDbLevelHash.tableList}
binlogx.useTableLevelHash.dbList=${maven.binlogx.useTableLevelHash.dbList}
binlogx.useTableLevelHash.tableList=${maven.binlogx.useTableLevelHash.tableList}
binlogx.clean.oldVersionBinlog.enable=${maven.binlogx.clean.oldVersionBinlog.enable}
binlogx.clean.relayData.enable=${maven.binlogx.clean.relayData.enable}
binlogx.clean.relayData.interval=1
binlogx.txn.stream.flowControl.window.maxSize=1000
binlogx.file.seek.buffer.maxSize=512
binlogx.kway.source.queue.size=128
#
# Replica相关参数
#
rpl.persist.basePath=/home/admin/logs/rocksdb_rpl/
rpl.task.supportRunningCheck=true
rpl.rocksDB.deserialize.parallelism=1
rpl.validation.perDb.parallelism=1
rpl.validation.chunk.size=1000
rpl_default_ignore_db_list=sys,mysql,information_schema
